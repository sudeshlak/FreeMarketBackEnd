type Category {
    id:String!
    title:String!
}

type Product {
    id: String!
    title: String!
    category: Category!
    quantity: Float!
    regular_price: Float!
    discount_price: Float!
    image: String!
}

input InputProductCategory {
    id: String
    title: String!
}

input InputProduct {
    id:String
    title: String!
    category: InputProductCategory!
    quantity: Float!
    regular_price: Float!
    discount_price: Float!
    image: String!
}

type BillingDetails {
    fullName: String!
    address: String!
    city: String!
    postalCode: String!
    country: String!
    contactNumber: String!
}

input InputBillingDetails {
    fullName: String!
    address: String!
    city: String!
    postalCode: String!
    country: String!
    contactNumber: String!
}

type Order {
    id: String!
    orderCode:String!
    requestedUser: User
    billingDetails: BillingDetails!
    productList: [Product!]!
    status:String!
    paymentType:String!
    paymentStatus:Boolean!
    deliveryInstructions:String
    requestedDate:String!
    discountPercentage:Float!
}

type Coupon{
    id: String!
    title: String!
    fromDate:Date!
    toDate:Date!
    couponCode: String!
    discountPercentage: Float!
}

type Date{
    stringDate:String!
    numberDate:Float!
}

input InputOrder {
    id: String
    orderCode:String!
    changeShippingAddress:Boolean!
    requestedUser: String!
    billingDetails: InputBillingDetails!
    productList: [InputProduct!]!
    status:String!
    paymentType:String!
    paymentStatus:Boolean!
    deliveryInstructions:String
    requestedDate:String!
    discountPercentage:Float!
}

type Query {
    getAllCategories: [Category]
    getAllProducts: [Product]
    getAllOrders:[Order]
    getAllCoupons:[Coupon]
}

type Mutation {
    login(email:String!,password:String!):User
    getUserByToken(token:String!):User
    getOrdersByToken(token:String!):[Order]
    token(email: String!): String!
    addProduct(newProduct: InputProduct!): Product
    addCoupon(newCoupon: InputCoupon!): Coupon
    addOrder(newOrder: InputOrder!): Order
    getOneOrder(id:String!):Order!
    addCategory(newCategory: InputProductCategory!): Category
    changeOrderStatus(id: String!,newState:String!): changeOrderStateResponse!
    generatePutUrl(image: Image!): String!
    generateGetUrl(image: Image!): String!
    addUser(newUser: InputUser!): User
    updateUser(id: String!, input: InputUser!): User
    deleteProduct(id: String!,imageName: String!): Product
    deleteCoupon(id: String!): Coupon
    updateProduct(id: String!, newProduct: InputProduct!): Product
    getOneCoupon(couponCode:String!):Coupon
}
type changeOrderStateResponse {
    changed:Boolean!
    order:Order
    productErrorMessages:[String]
}

type User {
    id:String!
    email: String!
    name: String!
    address: String!
    postalCode: String!
    country: String!
    phoneNumber: String!
    city: String!
    password: String!
    createdAt: String
    updatedAt: String
    type: String!
}

input Image {
    imageName: String!
    imageFileType: String!
}
input InputCoupon{
    id: String
    title: String!
    fromDate:InputDate!
    toDate:InputDate!
    couponCode: String!
    discountPercentage: Float!
}

input InputDate {
    stringDate:String!
    numberDate:Float!
}

input InputUser {
    email: String!
    name: String!
    address: String!
    postalCode: String!
    country: String!
    phoneNumber: String!
    city: String!
    password:String!
    type:String!
}